#!/bin/bash
# (C) Copyright 2012,2013 Continuent, Inc - Released under the New BSD License
# Version 1.0.5 - 2013-04-03
cookbook_dir=$(dirname $0)
cd "$cookbook_dir/../"

if [ ! -f $cookbook_dir/BOOTSTRAP.sh ]
then
    echo "$cookbook_dir/BOOTSTRAP.sh not found"
    exit 1
fi
. $cookbook_dir/BOOTSTRAP.sh NODES_STAR.sh
. $cookbook_dir/utilities.sh 

check_installed

if [ -z "$HUB" ]
then
    echo "HUB undefined. Please update $cookbook_dir/NODES_STAR.sh"
    exit 1
fi

#$cookbook_dir/clear_cluster

echo "installing STAR" >$INSTALL_LOG
date >> $INSTALL_LOG

if [ -n "$DRYRUN" ]
then
    [ -z "$VERBOSE" ] && VERBOSE=1
fi 

COMMAND_SEQUENCE=1
if [ -n "$USE_TPM" ]
then
    MEMBERS=${MASTERS[*]}
    MEMBER_LIST=$(echo $MEMBERS | tr ' ' ',')
    SERVICE_INDEX=0
    INSTALL_COMMAND="./tools/tpm configure defaults --reset \
        --log=timestamp \
        --replication-port=$DATABASE_PORT \
        --replication-user=$DATABASE_USER \
        --replication-password=$DATABASE_PASSWORD \
        --datasource-log-directory=$BINLOG_DIRECTORY \
        --home-directory=$TUNGSTEN_BASE \
        --datasource-mysql-conf=$MY_CNF \
        --datasource-log-directory=$BINLOG_DIRECTORY \
        --repl-disable-relay-logs=true \
        -a --datasource-boot-script=$MYSQL_BOOT_SCRIPT \
        --property=replicator.service.comments=true \
		--enable-slave-thl-listener=false \
        --rmi-port=$RMI_PORT \
        --thl-port=$THL_PORT \
        $MORE_OPTIONS $MORE_TPM_OPTIONS --$START_OPTION"

    run_command $INSTALL_COMMAND 

    INSTALL_COMMAND="./tools/tpm configure $HUB_SERVICE \
        --members=$MEMBER_LIST \
        --master=$HUB \
        --svc-applier-filters=bidiSlave 
    "
    run_command $INSTALL_COMMAND 

    for NODE in $MEMBERS
    do
        if [ "$NODE" != "$HUB" ]
        then
            SERVICE=${MM_SERVICES[$SERVICE_INDEX]}
            if [ "$SERVICE" == "$HUB_SERVICE" ]
            then
                SERVICE_INDEX=$(($SERVICE_INDEX+1))
                SERVICE=${MM_SERVICES[$SERVICE_INDEX]}
            fi
            INSTALL_COMMAND1="./tools/tpm configure $SERVICE --members=$NODE,$HUB --master=$NODE"
            INSTALL_COMMAND2="./tools/tpm configure $SERVICE --hosts=$HUB --log-slave-updates=true"
            INSTALL_COMMAND3="./tools/tpm configure $HUB_SERVICE --hosts=$NODE \
                --property=local.service.name=$SERVICE \
                --svc-allow-any-remote-service=true"
            run_command $INSTALL_COMMAND1
            run_command $INSTALL_COMMAND2
            run_command $INSTALL_COMMAND3
            SERVICE_INDEX=$(($SERVICE_INDEX+1))
        fi
    done
    INSTALL_COMMAND='./tools/tpm install'
    run_command $INSTALL_COMMAND
else
# install STAR
INDEX=0
for NODE in ${MASTERS[*]}
do
  INSTALL_COMMAND="./tools/tungsten-installer \
    --master-slave \
    --master-host=$NODE \
    --datasource-port=$DATABASE_PORT \
    --datasource-user=$DATABASE_USER \
    --datasource-password=$DATABASE_PASSWORD \
    --datasource-log-directory=$BINLOG_DIRECTORY \
    --service-name=${MM_SERVICES[$INDEX]} \
    --home-directory=$TUNGSTEN_BASE \
    --cluster-hosts=$NODE \
    --disable-relay-logs \
    --datasource-mysql-conf=$MY_CNF \
    --datasource-log-directory=$BINLOG_DIRECTORY \
    -a --datasource-boot-script=$MYSQL_BOOT_SCRIPT \
    --property=replicator.service.comments=true \
    --rmi-port=$RMI_PORT \
    --thl-port=$THL_PORT \
    $MORE_OPTIONS $START_OPTION "

    echo "## $COMMAND_SEQUENCE (host: $NODE)" >> $INSTALL_LOG
    echo $INSTALL_COMMAND | perl -pe 's/--/\\\n\t--/g' >> $INSTALL_LOG
    if [ -n "$VERBOSE" ]
    then
        echo "## $COMMAND_SEQUENCE (host: $NODE)"
        echo $INSTALL_COMMAND | perl -pe 's/--/\\\n\t--/g'
    fi
    COMMAND_SEQUENCE=$(($COMMAND_SEQUENCE+1))
    if  [ -z "$DRYRUN" ]
    then
        $INSTALL_COMMAND
        if [ "$?" != "0"  ]
        then
            exit
        fi
    fi
    INDEX=$(($INDEX+1))
done


TUNGSTEN_TOOLS=$TUNGSTEN_BASE/tungsten/tools
HUB_DS=`echo $HUB|perl -lpe's/\W/_/g'`

# set -x
INDEX=0
for NODE in ${MASTERS[*]}
do
    if [ "$NODE" != "$HUB" ]
    then
        # setting a slave service in the spoke
        SPOKE_DS=`echo $NODE|perl -lpe's/\W/_/g'`

        INSTALL_COMMAND="$TUNGSTEN_TOOLS/configure-service \
            -C --quiet \
            --host=$NODE \
            --datasource=$SPOKE_DS \
            --local-service-name=${MM_SERVICES[$INDEX]} \
            --role=slave \
            --service-type=remote \
            -a --svc-allow-any-remote-service=true \
            --release-directory=$TUNGSTEN_BASE/tungsten \
            --skip-validation-check=THLStorageCheck \
            --master-thl-host=$HUB \
            --master-thl-port=$THL_PORT \
            --svc-$START_OPTION  $HUB_SERVICE "

        echo "## $COMMAND_SEQUENCE (host: $NODE)" >> $INSTALL_LOG
        echo $INSTALL_COMMAND | perl -pe 's/--/\\\n\t--/g' >> $INSTALL_LOG

        if [ -n "$VERBOSE" ]
        then
            echo "## $COMMAND_SEQUENCE (host: $NODE)"
            echo $INSTALL_COMMAND | perl -pe 's/--/\\\n\t--/g'
        fi
        COMMAND_SEQUENCE=$(($COMMAND_SEQUENCE+1))

        if  [ -z "$DRYRUN" ]
        then
            $INSTALL_COMMAND
            if [ "$?" != "0"  ]
            then
                exit
            fi
        fi
        # Setting a slave service on the hub
        INSTALL_COMMAND="$TUNGSTEN_TOOLS/configure-service \
            --quiet -C \
            --host=$HUB \
            --local-service-name=$HUB_SERVICE \
            --role=slave \
            --datasource=$HUB_DS \
            --log-slave-updates=true \
            --service-type=remote \
            --release-directory=$TUNGSTEN_BASE/tungsten \
            --skip-validation-check=THLStorageCheck \
            --master-thl-host=$NODE \
            --master-thl-port=$THL_PORT \
            --svc-$START_OPTION \
            ${MM_SERVICES[$INDEX]}"

        echo "## $COMMAND_SEQUENCE (host: $HUB)" >> $INSTALL_LOG
        echo $INSTALL_COMMAND | perl -pe 's/--/\\\n\t--/g' >> $INSTALL_LOG

        if [ -n "$VERBOSE" ]
        then
            echo "## $COMMAND_SEQUENCE (host: $HUB)"
            echo $INSTALL_COMMAND | perl -pe 's/--/\\\n\t--/g'
        fi
        COMMAND_SEQUENCE=$(($COMMAND_SEQUENCE+1))

        if  [ -z "$DRYRUN" ]
        then
            $INSTALL_COMMAND

            if [ "$?" != "0"  ]
            then
                exit
            fi
        fi
    fi
    INDEX=$(($INDEX+1))
done
fi

# set +x

if  [ -n "$DRYRUN" ]
then
    echo "## $COMMAND_SEQUENCE (host: $(hostname)"
    echo "echo 'star' > $CURRENT_TOPOLOGY"
    exit
fi
echo "star" > $CURRENT_TOPOLOGY
$cookbook_dir/show_cluster 
post_installation
