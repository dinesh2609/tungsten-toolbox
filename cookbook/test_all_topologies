#!/bin/bash
# (C) Copyright 2012,2013 Continuent, Inc - Released under the New BSD License
# Version 1.0.5 - 2013-04-03
cookbook_dir=$(dirname $0)

if [ -f $cookbook_dir/../CURRENT_TOPOLOGY ]
then
    echo "There is already a cluster installed - Can't proceed."
    echo -n "Currently installed topology: "
    cat $cookbook_dir/../CURRENT_TOPOLOGY
    exit 1
fi


INSTALL_LOG=install_log.txt
TEST_LOG=test_log.txt

echo "# `date`" > $INSTALL_LOG
echo "# `date`" > $TEST_LOG

for TOPOLOGY in master_slave fan_in all_masters star
do
    for METHOD in installer tpm
    do
        skip=true
        if [ "$TOPOLOGY" == "all_masters" -o "$TOPOLOGY" == "master_slave" -o "$METHOD" == "installer" ]
        then
            skip=false
        fi
        if [ "$skip" == "true" ]
        then
            break
        fi
        if [ "$METHOD" == "tpm" ]
        then
            export USE_TPM=1
            rm -f deploy.cfg*
        else
            unset USE_TPM
        fi
        echo "# $TOPOLOGY (using $METHOD)" 
        echo "# $TOPOLOGY" >> $INSTALL_LOG
        echo "# $TOPOLOGY" >> $TEST_LOG
        UCTOPOLOGY=$(perl -e "print uc '$TOPOLOGY'")
        $cookbook_dir/install_$TOPOLOGY >> $INSTALL_LOG 
        exit_code=$?
        if [ "$exit_code" != "0" ]
        then
            echo "# ERROR installing $TOPOLOGY (using $METHOD)"
            exit $exit_code
        fi
        if [ -f /tmp/test_log$$ ] ; then rm /tmp/test_log$$ ; fi
        . $cookbook_dir/BOOTSTRAP.sh NODES_$UCTOPOLOGY.sh
        for MODE in row statement
        do
            for MASTER in ${MASTERS[*]}
            do
                $MYSQL -h $MASTER -e "set global binlog_format=$MODE"
            done 
            echo "# testing with binlog_format=$MODE" >> /tmp/test_log$$ 
            # echo "# testing with binlog_format=$MODE" 

            $cookbook_dir/test_cluster >> /tmp/test_log$$
            cat /tmp/test_log$$ >> $TEST_LOG
        done
        cat /tmp/test_log$$
        rm /tmp/test_log$$
        export I_WANT_TO_UNINSTALL=1
        export STOP_REPLICATORS=1
        export REMOVE_TUNGSTEN_BASE=1
        export REMOVE_SERVICE_SCHEMA=1
        export REMOVE_TEST_SCHEMAS=1
        export CLEAN_NODE_DATABASE_SERVER=1
        $cookbook_dir/clear_cluster >> $INSTALL_LOG
        unset I_WANT_TO_UNINSTALL
    done
done

OK=$(grep "^ok" $TEST_LOG| wc -l)
NOTOK=$(grep "^not ok" $TEST_LOG | wc -l)
if [ -z "$OK" ] ; then OK='0' ; fi
if [ -z "$NOTOK" ] ; then NOTOK='0' ; fi
TESTS=$(($OK+$NOTOK))
echo ""
echo "# tests : $TESTS"
echo "# pass  : $OK ($(($OK/$TESTS*100)))"
echo "# fail  : $NOTOK ($(($NOTOK/$TESTS*100)))"

#
# The desired number of NOT OK tests is 0.
# We exit with this number, which will make the test fail if there were any 'not ok' in the results
#
exit $NOTOK
