#!/bin/bash
# (C) Copyright 2012,2013 Continuent, Inc - Released under the New BSD License
# Version 1.0.5 - 2013-04-03
cookbook_dir=$(dirname $0)

function gethelp
{
    echo "syntax: $0 {start|stop|print}"
    echo "Starts (or stops) a Bristlecone load in every master deployed in the current topology"
    echo "For more info about this load, see "
    echo  "./bristlecone/bin/concurrent_evaluator.pl --help"
    exit
}

if [ -f CURRENT_TOPOLOGY ]
then
    TOPOLOGY=$(cat CURRENT_TOPOLOGY| tr '[:lower:]' '[:upper:]')
    NODES=NODES_$TOPOLOGY
else
    echo "CURRENT_TOPOLOGY not found" 
    exit
fi

OPERATION=start
if [ -n "$1" ]
then
    OPERATION=$1
fi

case $OPERATION in
    start)
        ;;
    stop)
        ;;
    print)
        ;;
    *)
        echo "unrecognized operation '$OPERATION'"
        gethelp
        ;;
esac

for REQUIRED in USER_VALUES $NODES
do
    if [ ! -f $cookbook_dir/$REQUIRED.sh ]
    then
        echo "could not find $cookbook_dir/$REQUIRED.sh"
        exit 1
    fi
done

. $cookbook_dir/USER_VALUES.sh
. $cookbook_dir/$NODES.sh
. $cookbook_dir/BOOTSTRAP.sh $NODES.sh

DRYRUN=
if [ "$OPERATION" == "print" ]
then
    DRYRUN=1
    OPERATION=start
    VERBOSE=1
fi

function find_roles {
    MASTER_COUNT=0
    SLAVE_COUNT=0
    SLAVES=()
    MASTERS=()
    for NODE in ${ALL_NODES[*]} 
    do 
        [ -n "$VERBOSE" ] && echo -n "$NODE "
        role=$($TREPCTL -host $NODE services |grep role | awk '{print $3}')
        if [ "$role" == "master" ]
        then
            MASTERS[$MASTER_COUNT]=$NODE
            MASTER_COUNT=$(($MASTER_COUNT+1))
            [ -n "$VERBOSE" ] && echo "master"
        else
            SLAVES[$SLAVE_COUNT]=$NODE
            SLAVE_COUNT=$(($SLAVE_COUNT+1))
            [ -n "$VERBOSE" ] && echo "slave"
        fi
    done

    if [ -z "${#MASTER[*]}" ]
    then
        echo "unable to find a master"
        exit 1
    fi
    export  MASTERS=(${MASTER[*]})
    export SLAVES=(${SLAVES[*]})
}

[ -n "$VERBOSE" ] && echo "# Determining current roles"

find_roles

JOB_INFO_PATH=$TUNGSTEN_BASE/tungsten/load

for HOST in  ${MASTERS[*]}
do
    db=$(echo $HOST | tr '\.' '_' )
    if [ "$OPERATION" == "start" ]
    then
        if [ -d $JOB_INFO_PATH/$db ]
        then
            rm -rf $JOB_INFO_PATH/$db/*
        else
            mkdir -p $JOB_INFO_PATH/$db
        fi
    fi
   BRISTLECONE_OPTIONS="--deletes=1 --updates=1 --inserts=3 --test-duration=3600"
   EVALUATOR="$TUNGSTEN_BASE/tungsten/bristlecone/bin/concurrent_evaluator.pl"
   DB_OPTIONS="--host=$HOST --port=$DATABASE_PORT -u $DATABASE_USER -p $DATABASE_PASSWORD "
   EV_OPTIONS="--continuent-root=$TUNGSTEN_BASE -d $db -s $JOB_INFO_PATH/$db"
   V=''
   [ -n "$VERBOSE" ] && [ "$OPERATION" == "stop" ] && V='--verbose'
   CMD="$EVALUATOR $BRISTLECONE_OPTIONS $DB_OPTIONS $EV_OPTIONS $V $OPERATION"
    if [ -n "$VERBOSE" ]
    then
        echo "$CMD"
    fi
    if [ -z "$DRYRUN" ]
    then
        $CMD
    fi
done
